usethis::use_appveyor()
usethis::use_readme_rmd()
usethis::use_travis()
usethis::use_data()
usethis::use_data_raw()
# Create example datasets -------------------------------------------------
set.seed(2018-05-12)
single_landscape_create = function(x) {
NLMR::nlm_randomcluster(ncol = 30, nrow = 30, p = 0.4, ai = c(0.25, 0.25, 0.5),
rescale = FALSE)
}
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
library(sp)
plot(landscape)
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE, fun=function(x){x})
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE, fun=function(x){x})
plot(landscape)
landscape <- raster::rasterToContour(landscape)
plot(landscape)
landscape <- sf::s_as_sf(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- sf::st_as_sf(landscape)
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE, fun=function(x){x==1})
plot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
# landscape <- sf::st_as_sf(landscape)
library(sp)
levelplot(landscape)
spplot(landscape)
devtools::install_github("mstrimas/smoothr")
landscape <- smoothr::smooth(landscape, method = "chaikin")
spplot(landscape)
landscape <- smoothr::smooth(landscape, method = "chaikin")
spplot(landscape)
landscape <- smoothr::smooth(landscape, method = "chaikin")
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = "chaikin", wrap = TRUE)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = "chaikin", wrap = TRUE)
landscape <- smoothr::smooth_chaikin(landscape, method = "chaikin", wrap = TRUE)
landscape <- smoothr::smooth_chaikin(landscape, wrap = TRUE)
landscape <- smoothr::smooth_chaikin(landscape, refinements = 10)
landscape <- smoothr::smooth(landscape, method = 'chaikin', refinements = 10)
spplot(landscape)
landscape <- smoothr::smooth(landscape, method = 'chaikin', refinements = 5)
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'chaikin', refinements = 5)
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'ksmooth')
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'spline')
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'spline', vertex_factor = 3)
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'densify')
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
spplot(landscape)
landscape <- smoothr::smooth(landscape, method = 'chaikin')
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'chaikin')
spplot(landscape)
# Example maps from NLMR --------------------------------------------------
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'chaikin')
spplot(landscape)
landscape <- single_landscape_create()
landscape <- raster::rasterToPolygons(landscape, dissolve = TRUE)
landscape <- smoothr::smooth(landscape, method = 'chaikin')
spplot(landscape)
landscape_filled <- smoothr::fill_holes(landscape, 1)
spplot(landscape)
landscape_filled <- smoothr::fill_holes(landscape, 5)
spplot(landscape)
spplot(landscape_filled)
landscape_filled <- smoothr::fill_holes(landscape, 100)
spplot(landscape_filled)
landscape_filled <- smoothr::fill_holes(landscape, 10000)
spplot(landscape_filled)
landscape_filled <- smoothr::fill_holes(landscape, 10000000)
spplot(landscape_filled)
landscape_filled
landscape_filled <- smoothr::fill_holes(landscape, 100000000000)
spplot(landscape_filled)
landscape_filled <- smoothr::fill_holes(landscape, 10000000000000000000000000000)
spplot(landscape_filled)
landscape_filled <- smoothr::fill_holes(landscape, 1000000000000000000000000000000000000000000000000000000000000000000000000)
spplot(landscape_filled)
library(smoothr)
p <- jagged_polygons$geometry[5]
area_thresh <- units::set_units(1000, km^2)
p_dropped <- fill_holes(p, threshold = area_thresh)
# plot
par(mar = c(0, 0, 1, 0), mfrow = c(1, 2))
plot(p, col = "black", main = "Original")
plot(p_dropped, col = "black", main = "After fill_holes()")
p
landscape <- sf::st_as_sf(landscape)
landscape_filled <- smoothr::fill_holes(landscape, 1000000000000000000000000000000000000000000000000000000000000000000000000)
spplot(landscape_filled)
plot(landscape_filled)
landscape_filled
p
